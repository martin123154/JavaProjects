package main.java.com.mzelek.jdbc.model;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.ArrayList;
import java.util.List;

public class PrzedstawienieManager {
	
	private Connection connection;

	private String url = "jdbc:hsqldb:hsql://localhost/";

	private String createTablePrzedstawienie = "CREATE TABLE Przedstawienie(przedstawienie_id int GENERATED BY DEFAULT AS IDENTITY, tytul varchar(30), data_rozp varchar(30), data_zak varchar(30))";

	private PreparedStatement DodajPrzedstawienie;
	private PreparedStatement UsuñPrzedstawienie;
	private PreparedStatement UsuñjedenrekordPrzedstawienie;
	private PreparedStatement Poka¿Przedstawienie;
	private PreparedStatement ZmieñPrzedstawienie;
	private PreparedStatement DropTablePrzedstawienie;

	private Statement statement;
	public PrzedstawienieManager() {
		try {
			connection = DriverManager.getConnection(url);
			statement = connection.createStatement();

			ResultSet rs = connection.getMetaData().getTables(null, null, null,
					null);
			boolean tableExists = false;
			while (rs.next()) {
				if ("Przedstawienie".equalsIgnoreCase(rs.getString("TABLE_NAME"))) {
					tableExists = true;
					break;
				}
			}

			if (!tableExists)
				statement.executeUpdate(createTablePrzedstawienie);

			DodajPrzedstawienie = connection
					.prepareStatement("INSERT INTO Przedstawienie (tytul, data_rozp, data_zak) VALUES (?, ?, ?)");
			UsuñPrzedstawienie = connection
					.prepareStatement("DELETE FROM Przedstawienie");
			UsuñjedenrekordPrzedstawienie = connection
					.prepareStatement ("DELETE FROM Przedstawienie WHERE przedstawienie_id = ?");
			Poka¿Przedstawienie = connection
					.prepareStatement("SELECT przedstawienie_id, tytul, data_rozp, data_zak FROM Przedstawienie");
			ZmieñPrzedstawienie = connection
					.prepareStatement("UPDATE Przedstawienie set tytul = ?, data_rozp = ?, data_zak = ? where przedstawienie_id = ?");
			DropTablePrzedstawienie = connection
					.prepareStatement("DROP TABLE Przedstawienie");

			
		} catch (SQLException e) {
			e.printStackTrace();
		}
		
		
		
	}
	
	public Connection getConnection() {
		return connection;
	}

	public void WyczyœæTabelePrzedstawienie() {
		try {
		UsuñPrzedstawienie.executeUpdate();
		} catch (SQLException e) {
			e.printStackTrace();
		}
	}
	
	public int DodajPrzedstawienie(Przedstawienie przedstawienie) {
		int count = 0;
		try {
			DodajPrzedstawienie.setString(1, przedstawienie.getTytul());
			DodajPrzedstawienie.setString(2, przedstawienie.getData_rozp());
			DodajPrzedstawienie.setString(3, przedstawienie.getData_zak());

			count = DodajPrzedstawienie.executeUpdate();

		} catch (SQLException e) {
			e.printStackTrace();
		}
		return count;
	}
	
	public List<Przedstawienie> Poka¿Przedstawienie() {
		List<Przedstawienie> przedstawienia = new ArrayList<Przedstawienie>();

		try {
			ResultSet rs = Poka¿Przedstawienie.executeQuery();

			while (rs.next()) {
				Przedstawienie p = new Przedstawienie();
				p.setPrzedstawienie_id(rs.getInt("przedstawienie_id"));
				p.setTytul(rs.getString("Tytul"));
				p.setData_rozp(rs.getString("Data_rozp"));
				p.setData_zak(rs.getString("Data_zak"));
				przedstawienia.add(p);
			}

		} catch (SQLException e) {
			e.printStackTrace();
		}
		return przedstawienia;
	}
	
	public int ZmieñPrzedstawienie(Przedstawienie przedstawienie){
		int count = 0;
		try{
			ZmieñPrzedstawienie.setString(1, przedstawienie.getTytul());
			ZmieñPrzedstawienie.setString(2, przedstawienie.getData_rozp());
			ZmieñPrzedstawienie.setString(3, przedstawienie.getData_zak());
			ZmieñPrzedstawienie.setInt(4, przedstawienie.getPrzedstawienie_id());
			count = ZmieñPrzedstawienie.executeUpdate();
		}catch(SQLException e){
			e.printStackTrace();
		}
		return count;
	}
	public int UsuñjedenrekordPrzedstawienie(Przedstawienie przedstawienie)
	{
		int count = 0;
		try {
			UsuñjedenrekordPrzedstawienie.setInt(1, przedstawienie.getPrzedstawienie_id());

			count = UsuñjedenrekordPrzedstawienie.executeUpdate();
		} catch (SQLException e) {
			e.printStackTrace();
		}
		return count;
		
	}
	public void DropTablePrzedstawienie() {
		try {
			DropTablePrzedstawienie.executeUpdate();
		} catch (SQLException e) {
			e.printStackTrace();
		}
	}

	
	
}
